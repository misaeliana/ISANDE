<!DOCTYPE html>
<html>
    <head>
        <title> New Purchase Order </title>
        <meta name="description" content="New Purchase Order">
        <meta name="keyword" content="Moderna, New Purchase Order">
        <link rel="stylesheet" type="text/css" href="../css/general.css">
        <link rel="stylesheet" type="text/css" href="../css/information.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

        <!--<link href = "https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel = "stylesheet">
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>-->
        <link rel="stylesheet" type="text/css" href="../jquery-ui-themes-1.13.0/themes/ui-lightness/jquery-ui.css">
        <script src="../jquery-ui/jquery-ui.min.js"></script>
        
    </head>
    <body>

        {{> logoutPartial }}

        {{#if inventoryAndPurchasing}}
            {{> inventoryAndPurchasingPartial }}
        {{/if}}

        {{#if manager}}
            {{> managerPartial }}
        {{/if}}

        <div class="content">
            <div> <!-- ADD FIXED -->
                <div style="display: flex;">
                    <div style="width: 50%"><h1 class="bold"> Purchase Order #{{newPONumber}}</h1></div>
                    <div class="btn-status">
                        <h3 id="dateToday"></h3>
                    </div>
                </div>
            </div> 
            <hr style="margin-top: 0px;">

            <div class="header-colored-bg">
                <h3 class ="bold header-text">Supplier Details</h3>
            </div>

            <div>
                <input style="margin-top: 15px;" type="text" class="form-control margin-bottom-10" id="supplierName" name="supplierName" placeholder="Supplier Name">
                <div id="supplier-error" style="display: none;">
                    <p class="error" id="no-suppler">Supplier does not exist</p>
                    <button class="btn-light-blue" id="add-new-supplier">+ Add New Supplier</button>
                </div>
                <input type="text" class="form-control margin-bottom-10" id="contactPerson" name="contactPerson" placeholder="Contact Person">
                <input type="text" class="form-control margin-bottom-10" id="contactNumber" name="contactNumber" placeholder="Contact Number">
                <input type="text" class="form-control margin-bottom-10" id="address" name="Address" placeholder="Address">   
            </div>

            <div class="header-colored-bg" style="margin-top: 15px; margin-bottom: 10px">
                <h3 class ="bold bold header-text">Order Details</h3>
            </div>

            <form>
                <input style="margin-top: 5px; margin-bottom: 0px; width: 150px; float: left; margin-right: 10px" type="text" class="form-control" id="itemDescription" name="itemDescription" placeholder="Item Description">
                <input style="margin-top: 5px; margin-bottom: 0px; width: 150px; float: left; margin-right: 10px; text-align: right;" type="number" class="form-control" id="qty" name="qty" placeholder="Qty">
                <select class="dropdown" id="dropdown-item-unit" style="margin-top: 5px; margin-bottom: 0px; width: 150px; float: left; margin-right: 10px">
                    <option value="no-selected">--Unit--</option>
                </select>
                <input style="margin-top: 5px; margin-bottom: 0px; float: left; height: 34px; width: 34px; background-color: #0F84D9; border: #0F84D9; border-radius: 7px; color: white;" type="button" id="addItem" name="addItem" value="+">
            </form>
            
            <!-- Modal -->
            <div class="modal fade" id="modal-new-item" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title" id="exampleModalLongTitle">New Item</h3>
                        <!--<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>-->
                    </div>
                    <div class="modal-body">
                        <form id="add-new-item">
                            <div class="flex-display">
                                <label for="description" class="modal-label">Description</label> 
                                <input id="description" class="modal-input form-control" type="text"><br>
                            </div>
                            <p class="error" id="error-description" style="margin-top: 3px; margin-bottom: 3px;"></p>
                            <label for="dropdown-category" style="margin-right: 10px">Item Category</label>
                            <select class="dropdown" id="dropdown-category" style="margin-top: 3px; margin-bottom: 5px; height: 30px">
                                <option value="no-selected" selected>--Select Category--</option>
                                {{#each itemCategories}}
                                    <option value={{_id}}>{{category}}</option>
                                {{/each}}
                            </select>
                            <p class="error" id="error-category" style="margin-top: 3px; margin-bottom: 3px;"></p>

                            <label for="dropdown-unit" style="margin-right: 10px">Unit</label>
                            <select class="dropdown" id="dropdown-unit" style="margin-top: 3px; margin-bottom: 5px; height: 30px; margin-right: 20px;">
                                <option value="no-selected" selected>--Select Unit--</option>
                                {{#each units}}
                                    <option value={{_id}}>{{unit}}</option>
                                {{/each}}
                            </select>
                            <input id="same-selling-unit"type="checkbox" style="margin-right: 5px;">
                            <label for="same-selling-unit">Same as selling unit</label><br>
                            <p class ="error" id="error-unit"></p>
                            <div id="div-selling-price" style="display: none;">
                                <label for="selling-price" style="margin-right: 10px">Selling Price</label>
                                <input id="selling-price" type="number">
                                <br>
                                <p class="error" id="error-selling-price" style="margin-top: 3px; margin-bottom: 3px;"></p>
                            </div>
                            <div id="div-quantity-in-retail">
                                <label for="quantity-in-retail" style="margin-right: 10px;">Quantity in retail</label><input type="number" id="quantity-in-retail"><br>
                                <p class="error" id="error-retail-quantity" style="margin-top: 3px; margin-bottom: 3px;"></p>
                            </div>


                            <label for="reorder-level">Reorder Level</label> <input id="reorder-level" type="number"><br>
                            <p class="error" id="error-reorder-level" style="margin-top: 3px; margin-bottom: 3px;"></p>

                            <label for="EOQ">EOQ</label> <input id="EOQ" type="number"><br>
                            <p class="error" id="error-EOQ" style="margin-top: 3px; margin-bottom: 3px;"></p>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="modal-btn-grey" data-dismiss="modal">Close</button>
                        <button type="button" class="modal-btn-light-blue" id="btn-add-new-item">Save</button>
                    </div>
                </div>
                </div>
            </div>

                <div style="height: 45px"></div>

               <div class="display-flex" style="margin-top: 10px">
                <div id="div-warning-new-invoice">
                    <button class="btn-light-blue" id="btn-new-item" style="display: none; margin-bottom: 10px;" data-toggle="modal" data-target="#modal-new-item">Add New Item</button>
                    <p id="text-warning-new-PO" class="error" style="display: none;">Item does not exist</p>
                </div> 
            </div>

                    <table class="table" id="table-poItem">
                        <thead style="background-color: #2F5D62; color: white">
                            <!--align columns accordingly-->
                            <tr>
                                <th>Item Description</th>
                                <th>Qty</th>
                                <th>Unit</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="table-poItem-body"> 

                        </tbody>
                    </table>

                    <div style="margin-top: 50px;">
                        <div style="display: flex;">
                            <div style="width: 50%"><div class="btn-cancel-invoice"><button class="btn-light-grey" id="btn-save-invoice" style="margin-bottom: 10px;">Cancel</button></div></div>
                            <div class="btn-save-invoice btn-status"><button class="btn-light-blue" id="btn-save-PO" style="margin-bottom: 10px;" >Save</button></div>
                        </div>
                    </div>

                    <!--<div class="btn-export-invoice"><button class="btn-dark-blue" id="btn-export-invoice">Export</button></div>-->

                    
        </div>

        <script>
            $(document).ready(function() {

                var today = new Date();
                var dd = String(today.getDate()).padStart(2, '0');
                var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
                var yyyy = today.getFullYear();
                today = mm + '/' + dd + '/' + yyyy;
                $('#dateToday').text(today);

                $('#itemDescription').focus(function() {
                    if ($("#supplierName").val() == ""){
                        alert("Please select a supplier first");
                        $('#itemDescription').blur();
                    }
                });

                $("#itemDescription" ).autocomplete({
                    source: function(request, response) {
                    $.ajax({
                                url: `/getItemNamePO?query=${request.term}`,
                                dataType: "json",
                                data: {
                                    //request.term refers to the value currently in the text input
                                    term: request.term,
                                    supplier: $('#supplierName').val()
                                },
                                success: function (data) {
                                    $('#text-warning-new-PO').css('display', 'none');
                                    $("#itemDescription").css("border", "1px solid #DDDDDD");
                                    response(data);
                                }
                         });
                    }, response: function (event, ui) {
                        if (ui.content.length === 0) {
                            $('#btn-new-item').css('display', 'block');
                            $('#text-warning-new-PO').css('display', 'block');
                            $('#addItem').prop('disabled', true);
                        }

                        else {
                            $('#text-warning-new-PO').css('display','none');
                            $('#btn-new-item').css('display', 'none');
                            $('#addItem').prop('disabled', false);
                        }
                    }, select: function(event, ui) {
                        var itemDesc = ui.item.label;
                        $.get('/getEOQ', {itemDesc}, function(result) {
                            $('#qty').val(result)
                        })

                        var supplierName = $("#supplierName").val()
                        $.get('/getItemUnitsPO', {itemDesc, supplierName}, function(result) {
                            for (var i=0; i<result.length; i++) {
                                $('#dropdown-item-unit').append(`
                                    <option value="${result[i].id}">${result[i].unit}</option>
                                `)
                            }
                            $('#dropdown-item-unit').prop("selectedIndex", 1)
                        }); 
                    }
                });

            $("#supplierName").autocomplete({
                source: function(request, response) {
                $.ajax({
                            url: `/getSupplierName?query=${request.term}`,
                            dataType: "json",
                            data: {
                                //request.term refers to the value currently in the text input
                                term: request.term,
                            },
                            success: function (data) {
                                $('#supplier-error').css('display', 'none');
                                $("#supplierName").css("border", "1px solid #DDDDDD");
                                response(data);
                            }
                     });
                }, response: function (event, ui) {
                    if (ui.content.length === 0) {
                        $('#supplier-error').css('display', 'block');
                        $('#btn-update-new-po').prop('disabled', true);
                        $('#btn-update-new-po').css("background-color", "#b3b3b3");
                    }
                    else {
                        $('#supplier-error').css('display', 'none');
                        $('#btn-update-new-po').prop('disabled', false);
                        $('#btn-update-new-po').css("background-color", "#0F84D9");  
                    }
                }, select: function(event, ui) {
                    var supplierName = ui.item.label;
                    $.get('/getSupplierInformation', {supplierName}, function(result) {
                        $('#contactPerson').val(result.contactPerson);
                        $('#contactNumber').val(result.number);
                        $('#address').val(result.address);
                    });
                }
            });

            function itemFilled() {
                var allFilled = true 
                
                if ($('#itemDescription').val() == "") {
                    $('#itemDescription').css("border", "2px solid #B00000");
                    allFilled = false
                }
                 else
                    $('#itemDescription').css("border", "1px solid #DDDDDD");


                if ($('#qty').val()== "") {
                    $('#qty').css("border", "2px solid #B00000");
                    allFilled = false
                }
                else
                    $('#qty').css("border", "1px solid #DDDDDD");

                if ($('#dropdown-item-unit').val() == "no-selected") {
                    $('#dropdown-item-unit').css("border", "2px solid #B00000");
                    allFilled = false
                }
                 else
                    $('#dropdown-item-unit').css("border", "1px solid #DDDDDD");


                return allFilled
            }


            $('#addItem').click(function(){
                var itemDesc = $('#itemDescription').val();
                var unit = $('#dropdown-item-unit option:selected').text();
                var qty = $('#qty').val();

                //all blanks are filled up
                if (itemFilled()) {
                    $('#table-poItem').append(
                    `<tr>
                        <td class="classItemDescription">${itemDesc}</td>
                        <td class="classQty">${qty}</td>
                        <td class="unit">${unit}</td>
                        <td><button class="delete-button add-stock-delete-btn"><img src="../images/delete-icon.png" height="20px" width="15x" alt="Delete"></button></td>
                    </tr>`);

                    $('#itemDescription').val('');
                    $('#qty').val('');
                    $('#text-warning-new-PO').text("");
                    $('#dropdown-item-unit option:not(:first)').remove();
                }
                
            });

            $("#table-poItem").on('click','.add-stock-delete-btn',function() {
                    $(this).closest('tr').remove();
                });

            function allFilled() {
                var supplierName = $('#supplierName').val();
                var contactPerson = $('#contactPerson').val();
                var contactNumber = $('#contactNumber').val();
                var address = $('#address').val();

                if (supplierName!="" && contactPerson!="" && contactNumber!="" && address!="" ) {
                    $('#supplierName').css("border", "1px solid #DDDDDD");
                    $('#contactPerson').css("border", "1px solid #DDDDDD");
                    $('#contactNumber').css("border", "1px solid #DDDDDD");
                    $('#address').css("border", "1px solid #DDDDDD");
                    return true;
                }

                else {
                    if (supplierName == "")
                        $('#supplierName').css("border", "2px solid #B00000");
                    else
                        $('#supplierName').css("border", "1px solid #DDDDDD");

                    if (contactPerson == "")
                        $('#contactPerson').css("border", "2px solid #B00000");
                    else
                        $('#contactPerson').css("border", "1px solid #DDDDDD");

                    if (contactNumber == "")
                        $('#contactNumber').css("border", "2px solid #B00000");
                    else
                        $('#contactNumber').css("border", "1px solid #DDDDDD");

                    if (address == "")
                        $('#address').css("border", "2px solid #B00000");
                    else
                        $('#address').css("border", "1px solid #DDDDDD");

                    return false;
                }
            }

            $('#btn-save-PO').click(function() {
                var poItems = [];
                var date = $('#dateToday').text();
                var poNumber;

                if (allFilled()) {
                    $.get('/previousPONumber', function(result) {
                        if (result == "none")
                            poNumber = 1;
                        else
                            poNumber = parseInt(result)+1;

                        $("#table-poItem-body > tr").each(function () {
                            var poItem= {
                                itemDesc: $(this).children('.classItemDescription').text(), 
                                quantity: $(this).children('.classQty').text(),
                                unit: $(this).children('.unit').text()
                            }
                            poItems.push(poItem);
                        });
                        var itemsString = JSON.stringify(poItems); 
                        var supplierName = $('#supplierName').val(); 
                        $.post('/saveNewPO', {supplierName, itemsString, date, poNumber}, function (result) {
                            $("#table-poItem tbody tr").remove();
                            alert("Purchase order saved");
                            window.location = "/purchaseOrders"
                        });
                    });
                }
                else
                    alert("Please fill out the necessary information");
            })


            //STUFF FOR ADDING NEW ITEM FROM PO
            function capitalize(string){
                var words = string.toLowerCase().split(' ');
                for (i=0; i<words.length; i++)
                    words[i] = words[i].charAt(0).toUpperCase() + words[i].substring(1);
                return words.join(' ');
            }

            // INPUT VALIDATION

            function descriptionValidation(description) {
                if (description == null || description == "") {
                    errorMessage("description");
                    return 1;
                }
                else 
                    return 0;
            }

            function typeValidation(type) {
                if (type == "no-selected") {
                    errorMessage("type");
                    return 1;
                }
                else 
                    return 0;
            }

            function unitValidation(unit) {
                if (unit == "no-selected") {
                    errorMessage("unit");
                    return 1;
                }
                else 
                    return 0;
            }

            function reorderLevelValidation(reorderLevel) { 
                if (reorderLevel == null || reorderLevel == "") {
                    errorMessage("reorderLevel");
                    return 1;
                } else if (parseFloat(reorderLevel) <= 0) {
                    errorMessage("reorderLevelInvalidNum");
                    return 1;
                }
                else 
                    return 0;
            }

            function quantityInRetail(retailQuantity) {
                //if checked, should be left blank because it's hidden
                if ($('#same-selling-unit').is(":checked")) {
                    if (retailQuantity == "") {
                        return 0;
                    }
                    else {
                        errorMessage("retailQuantity")
                        return 1;
                    }
                }
                else {
                    if (retailQuantity == "") {
                        errorMessage("retailQuantity")
                        return 1;
                    }
                    else {
                        if (parseInt(retailQuantity) <=0 ) {
                            errorMessage("invalidRetailQuantity")
                            return 1;
                        }
                        else
                            return 0;
                    }
                }
            }

            function EOQValidation(EOQ) { 
                if (EOQ == null || EOQ == "") {
                    errorMessage("EOQ");
                    return 1;
                } else if (parseFloat(EOQ) <= 0) {
                    errorMessage("EOQInvalidNum");
                    return 1;
                }
                else 
                    return 0;
            }

            function sellingPriceValidation(price) {
                //if same selling unit, selling price should not be blank
                if ($('#same-selling-unit').is(":checked")) {
                    if (price == null || price == "") {
                        errorMessage("sellingPrice");
                        return 1;
                    }
                    else {
                        if (parseFloat(price) <=0) {
                            errorMessage("invalidSellingPrice")
                        }
                    }
                }
                else 
                    return 0;
            }

            function errorMessage(type) {
                if (type == "description") {
                    $("#description").css("border", "1px solid #B00000");
                    $("#error-description").text("Please enter an Item Description.");
                } else if (type == "type") {
                    $("#dropdown-category").css("border", "1px solid #B00000");
                    $("#error-category").text("Please select a Type.");
                } else if (type == "unit") {
                    $("#dropdown-unit").css("border", "1px solid #B00000");
                    $("#error-unit").text("Please select a Unit.");
                } 

                else if (type == "sellingPrice") {
                    $("#selling-price").css("border", "1px solid #B00000");
                    $("#error-selling-price").text("Please enter a Selling Price.");
                } else if (type == "invalidSellingPrice") {
                    $("#selling-price").css("border", "1px solid #B00000");
                    $("#error-selling-price").text("Invalid selling price.");
                }  

                else if (type == "retailQuantity") {
                    $("#quantity-in-retail").css("border", "1px solid #B00000");
                    $("#error-retail-quantity").text("Please enter a Retail Quantity.");
                } else if (type == "invalidRetailQuantity") {
                    $("#quantity-in-retail").css("border", "1px solid #B00000");
                    $("#error-retail-quantity").text("Invalid Retail Quantity");
                } 
                else if (type == "reorderLevel") {
                    $("#reorder-level").css("border", "1px solid #B00000");
                    $("#error-reorder-level").text("Please enter a Reorder Level.");
                } else if (type == "reorderLevelInvalidNum") {
                    $("#reorder-level").css("border", "1px solid #B00000");
                    $("#error-reorder-level").text("Invalid Reorder Level.");
                } 

                else if (type == "EOQ") {
                    $("#EOQ").css("border", "1px solid #B00000");
                    $("#error-EOQ").text("Please enter an EOQ.");
                } else if (type == "EOQInvalidNum") {
                    $("#EOQ").css("border", "1px solid #B00000");
                    $("#error-EOQ").text("Invalid EOQ.");
                }
            }

            function resetErrorMessage() {
                $("#description").css("border", "1px solid #DDDDDD");
                $("#error-description").text("");
                $("#dropdown-category").css("border", "1px solid #DDDDDD");
                $("#error-category").text("");
                $("#dropdown-unit").css("border", "1px solid #DDDDDD");
                $("#error-unit").text("");
                $("#quantity-in-retail").css("border", "1px solid #DDDDDD");
                $("#error-retail-quantity").text("");
                $("#selling-price").css("border", "1px solid #DDDDDD");
                $("#error-selling-price").text("");
                $("#reorder-level").css("border", "1px solid #DDDDDD");
                $("#error-reorder-level").text("");
                $("#EOQ").css("border", "1px solid #DDDDDD");
                $("#error-EOQ").text("");
            }

             $('#description').keyup(function () { 
                resetErrorMessage();

                // Get value 
                 var description = capitalize($('#description').val());

                // Check if dish name exists 
                $.get("/getCheckItemDescription", {itemDescription: description}, function (result) {
                    if (result.itemDescription == description) {
                        //alert("same");
                        $("#description").css("border", "1px solid #B00000");
                        $("#error-description").text("Item Description already taken.");
                        $("#btn-add-new-item").prop("disabled", true);
                        $("#btn-add-new-item").css("background-color", "#b3b3b3");
                    } else {
                        $("#description").css("border", "1px solid #DDDDDD");
                        $("#error-description").text("");
                        $("#btn-add-new-item").prop("disabled", false);
                        $("#btn-add-new-item").css("background-color", "#0F84D9");
                    }
                });
            });

             $('#dropdown-category').change(function() {
                    resetErrorMessage();
                })

                $('#dropdown-unit').change(function() {
                    resetErrorMessage();
                })

                $('#reorder-level').keyup(function () { 
                    resetErrorMessage();
                });

                $('#EOQ').keyup(function () { 
                    resetErrorMessage();
                });

                $('#selling-price').keyup(function () { 
                    resetErrorMessage();
                });

                $('#quantity-in-retail').keyup(function () {
                    resetErrorMessage();
                })

                $('#same-selling-unit').change(function() {
                    if ($(this).is(":checked")) {
                        $('#quantity-in-retail').val('')
                        $('#div-quantity-in-retail').css('display', 'none')
                        $('#div-selling-price').css('display', 'block')
                    }

                    else {
                        $('#selling-pricel').val('')
                        $('#div-quantity-in-retail').css('display', 'block')
                        $('#div-selling-price').css('display', 'none')
                    }

                })


                function checkAll(description, category, unit, reorderLevel, EOQ, sellingPrice, retailQuantity) {
                    descriptionValidation(description);
                    typeValidation(category);
                    unitValidation(unit);
                    reorderLevelValidation(reorderLevel);
                    EOQValidation(EOQ);
                    sellingPriceValidation(sellingPrice);
                    quantityInRetail(retailQuantity)
                }

                $('#btn-add-new-item').click(function() {
                    var description = capitalize($('#description').val());
                    var category = $('#dropdown-category').val();
                    var categoryText = $('#dropdown-category option:selected').text();
                    var unit = $('#dropdown-unit').val();
                    var unitText = $('#dropdown-unit option:selected').text();
                    var retailQuantity = $('#quantity-in-retail').val();
                    var reorderLevel = $('#reorder-level').val();
                    var EOQ = $('#EOQ').val();

                    var sellingPrice = $('#selling-price').val();

                    checkAll(description, category, unit, reorderLevel, EOQ, sellingPrice, retailQuantity);

                    if (!descriptionValidation(description) && !typeValidation(category) && !unitValidation(unit) && !quantityInRetail(retailQuantity) && !sellingPriceValidation(sellingPrice) && !reorderLevelValidation(reorderLevel) && !EOQValidation(EOQ)) {
                        // remove texts and red borders
                        resetErrorMessage();

                        $.post('/postNewItem', {description, category, categoryText, unit, unitText, retailQuantity, sellingPrice, reorderLevel, EOQ}, function (result) {

                            $('#modal-new-item').modal('hide');
                            $('#add-new-item').trigger('reset');
                        })
                    }
                })
            })
        </script>
    </body>
</html>