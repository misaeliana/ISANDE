<!DOCTYPE html>
<html>
    <head>
        <title> Return </title>
        <meta name="description" content="Return">
        <meta name="keyword" content="Moderna, Return">
        <link rel="stylesheet" type="text/css" href="../css/general.css">
        <link rel="stylesheet" type="text/css" href="../css/information.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

        <!--<link href = "https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel = "stylesheet">
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>-->
        <link rel="stylesheet" type="text/css" href="../jquery-ui-themes-1.13.0/themes/ui-lightness/jquery-ui.css">
        <script src="../jquery-ui/jquery-ui.min.js"></script>
    </head>
    <body>

        {{> logoutPartial }}

        {{#if cashier}}
            {{> cashierPartial }}
        {{/if}}

        {{#if manager}}
            {{> managerPartial }}
        {{/if}}

        <div class="content">
            <div> <!-- ADD FIXED -->
                <div style="display: flex;">
                    <div style="width: 50%"><h1 class="bold"> Invoice #{{invoiceInfo.invoiceID}} </h1></div>
                    <div class="btn-status">
                        <h3>MM/DD/YYYY</h3>
                    </div>
                </div>
            </div> 
            <p id="invoice-type" style="display: none;">{{invoiceInfo.type}}</p>
            <p id="payment-type" style="display: none;">{{invoiceInfo.paymentOption}}</p>
            <hr style="margin-top: 0px;">

            <div style="display: flex; align-content: center; align-items: center;">
                <label for="dropdown-return-type" style="margin-right: 10px">Type</label>
                <select class="form-control" id="dropdown-return-type" style="margin-right: 20px; width: 150px;">
                    {{#each types}}
                        <option value="{{_id}}">{{type}}</option>
                    {{/each}}
                </select>

                <label for="dropdown-payment-type" style="margin-right: 10px">Payment Type</label>
                <select class="form-control" id="dropdown-payment-type" style="margin-right: 10px; width: 150px;">
                        {{#each paymentTypes}}
                            <option value="{{_id}}">{{paymentOption}}</option>
                        {{/each}}
                </select>
                <p id="payment-type-error" class="error"></p>

                <div class="delivery-info" style="display: none;">
                     <div style="display: flex; align-items: center;">
                        <label class="date-label" style="margin-right: 10px" for="delivery-date">Delivery Date</label>
                        <input style="margin-right: 20px; width: 180px;" type="date" id="delivery-date" class="form-control" name="delivery-date">

                        <label for="dropdown-delivery-personnel" style="margin-right: 10px">Delivery Personnel</label>
                        <select class="form-control" id="dropdown-delivery-personnel" style="margin-right: 10px; width: 150px;">
                            <option value="no-selected">Select Personnel</option>
                            {{#each deliveryPersonnel}}
                                <option value="{{_id}}">{{name}}</option>
                            {{/each}}
                        </select>
                     </div>
                </div>
            </div>

            <div class="header-colored-bg" style="margin-top: 15px; margin-bottom: 10px">
                <h3 class ="bold header-text">Customer Details</h3>
            </div>

            <div>
                {{#if customerName}}
                    <input style="margin-top: 15px;" type="text" class="form-control margin-bottom-10" id="customerName" name="customerName" placeholder="Customer Name" value="{{customerName}}" readonly>
                    <p class="error" id="error-customer-name" style="margin-bottom: 5px;"></p>
                    <button class="btn-light-blue" id="add-new-customer" style="display:none; margin-bottom: 10px;" data-toggle="modal" data-target="#customerModal">Add New Customer</button>
                {{/if}}
                
                {{#if customerInfo}}
                    <input style="margin-top: 15px;" type="text" class="form-control margin-bottom-10" id="customerName" name="customerName" placeholder="Customer Name" value="{{customerInfo.name}}" readonly>
                    <p class="error" id="error-customer-name" style="margin-bottom: 5px;"></p>
                {{/if}}

                <div class="delivery-info" style="display:none">
                     <div style="display: flex;">
                        <select class="dropdown delivery-info" id="dropdown-address-title" style="margin-right: 3px; width:200px">
                            <option value="no-selected">Select Address</option>
                            {{#each customerAddress}}
                            <option>{{addressTitle}}</option>
                            {{/each}}
                        </select>
                        <input type="text" class="form-control margin-bottom-10 delivery-info" id="address" name="address" placeholder="Address" readonly> <!--style="display:none"-->
                    </div>
                    <input type="text" class="form-control margin-bottom-10" id="contactNumber" name="contactNumber" placeholder="Contact Number" value="{{customerInfo.number}}"  pattern="/^-?\d+\.?\d*$/" onKeyPress="if(this.value.length==11) return false;"> <!--style="display:none"-->
                        <textarea class="form-control" id="delivery-notes" name="notes" placeholder="Delivery Notes"></textarea>
                </div>
            </div>

            <!--MODAL-->
            <div class="modal fade" id="customerModal">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                        <h2 class="modal-title" id="modalTitle">Add Customer</h2>     
                    </div>
                    <div class="modal-body">
                        <form id="add-new-customer">
                                        <div class="flex-display">
                                            <label for="new-customer-name" class="modal-label">Customer Name</label> 
                                            <input id="new-customer-name"class="modal-input form-control" type="text" value="{{customerName}}"readonly><br>
                                        </div>
                                        <p class="error modal-error" id="error-new-customer-name"></p>

                                         <div class="flex-display">
                                            <label for="contact-person" class="modal-label">Contact Person</label> 
                                            <input id="contact-person" type="text" class="modal-input form-control"><br>
                                        </div>
                                        <p class="error modal-error" id="error-contact-person"></p>
                                        
                                        <div class="flex-display">
                                            <label for="new-contact-number" class="modal-label">Contact Number</label> 
                                            <input id="new-contact-number" class="modal-input form-control" type="number" pattern="/^-?\d+\.?\d*$/" onKeyPress="if(this.value.length==11) return false;"><br>
                                        </div>
                                        <p class="error modal-error" id="error-contact-number"></p>
                                        
                                        <div class="flex-display">
                                            <label for="address-title" class="modal-label">Address Title</label> 
                                            <input class="address-title modal-input form-control" type="text"><br>
                                        </div>
                                         <p class="error modal-error" id="error-address-title"></p>
                                        <div class="flex-display">
                                            <label for="address" class="modal-label">Address</label> 
                                            <input class="address modal-input form-control" type="text"><br>
                                        </div>
                                        <p class="error modal-error" id="error-address"></p>
                                        <div id="new-row"></div>
                                        <button id="more-address" type="button" class='btn-light-blue' style="style=float: right;">Add Address</button>
                                    </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="modal-btn-grey" data-dismiss="modal">Close</button>
                        <button type="button" id = "save-cust" class="modal-btn-light-blue">Add</button>
                    </div>
                </div>
            </div>
            </div>


                <div class="header-colored-bg" style="margin-top: 20px; margin-bottom: 10px">
                    <h3 class ="bold bold header-text">Order Details</h3>
                </div>
                
                <h3 class ="bold">Return Items</h3>

                    <table class="table" id="table-return-order-details">
                        <thead style="background-color: #2F5D62; color: white">
                            <tr>
                                <th>Item Description</th>
                                <th style="display: none;">Qty Purchased</th>
                                <th>Qty</th>
                                <th>Unit</th>
                                <th>Unit Price</th>
                                <th>Discount</th>
                                <th>Amount</th>
                                <th>Return</th>
                                <th>Reason</th>
                            </tr>
                        </thead>
                        <tbody> 
                            {{#each invoiceItems}}
                                <tr class="return-row">
                                    <td class="return-item-desc">{{itemDescription}}</td>
                                    <td style="display: none;" class="quantity-purchased">{{quantity}}</td>
                                    <td><input class="return-quantity form-control" type="number" value="{{quantity}}" style="width:150px; text-align:right;" disabled></td>
                                    <td class="unit">{{unit}}</td>
                                    <td class="return-unit-price" style="text-align: right;">₱ {{unitPrice}}</td>
                                    <td class="return-discount" style="text-align: right;">₱ {{discount}}</td>
                                    <td class="return-amount" style="text-align: right;">₱ {{amount}}</td>
                                    <td style="text-align:center;"> 
                                        <input type="checkbox" class="return-check">
                                    </td>
                                    <td>
                                        <select class= "dropdown return-reason form-control" style="width: 150px;" disabled>
                                            <option value="no-selected" selected>Select Reason</option>
                                            {{#each returnReasons}}
                                                <option value="{{_id}}">{{reason}}</option>
                                            {{/each}}
                                        </select>
                                    </td>
                                </tr>
                            {{/each}}
                        </tbody>
                    </table>

                     <hr style="margin-top: 0px; margin-bottom: 10px;">

                    <div class="display-flex" style="margin-top: 20px">
                        <h3 class ="bold h3-left">Add New Item</h3>
                    </div>

                    <form>
                        <input style="margin-top: 5px; margin-bottom: 0px; width: 400px; float: left; margin-right: 10px" type="text" class="form-control" id="return-add-item-description" name="return-add-item-description" placeholder="Item Description">
                         <select class="form-control" id="dropdown-item-unit" style="margin-top: 5px; margin-bottom: 0px; width: 150px; float: left; margin-right: 10px">
                            <option value="no-selected">Select Unit</option>
                        </select>
                        <input style="margin-top: 5px; margin-bottom: 0px; width: 150px; float: left; margin-right: 10px; text-align: right;" type="text" class="form-control" id="return-add-item-qty" name="return-add-item-qty" placeholder="Qty">
                        <input style="margin-top: 5px; margin-bottom: 0px; width: 150px; float: left; margin-right: 10px; text-align: right;" type="text" class="form-control" id="return-add-item-discount" name="return-add-item-discount" placeholder="Discount">
                        <input style="margin-top: 5px; margin-bottom: 0px; float: left; height: 34px; width: 34px; background-color: #0F84D9; border: #0F84D9; border-radius: 7px; color: white;" type="button" id="return-add-item" name="return-add-item-addItem" value="+">
                    </form>

                    <div style="height: 45px"></div>

                    <div id="div-warning-return-new-item">
                        <p id="text-warning" class="error" style="margin-bottom: 5px;"></p>
                    </div>

                    <table class="table" id="table-return-new-item">
                        <thead style="background-color: #2F5D62; color: white">
                            <tr>
                                <th>Item Description</th>
                                <th>Qty</th>
                                <th>Unit</th>
                                <th>Unit Price</th>
                                <th>Discount</th>
                                <th>Amount</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="table-return-new-item-body"> 
                            
                        </tbody>
                    </table>

                    <input style="margin-top: 5px; margin-bottom: 0px; width: 150px; float: right; text-align: right;" type="number" class="form-control margin-bottom-10" id="total-discount" name="discount" placeholder="Discount">

                    <br> 
                    <br> 
                    <br> 
                    <div class="summary-container">
                        <div class="summary-text">Subtotal</div>
                        <div class="summary-info-container"><div class="summary-info" id="subtotal">₱ {{invoiceInfo.subtotal}}</div></div>
                    </div>
                    <div class="summary-container">
                        <div class="summary-text">VAT</div>
                        <div class="summary-info-container"><div class="summary-info" id="vat">₱ {{invoiceInfo.VAT}}</div></div>
                    </div>
                    <div class="summary-container">    
                        <div class="summary-text">Discount</div>
                        <div class="summary-info-container" style="display: none;"><div class="summary-info" id="prev-invoice-discount">{{invoiceInfo.discount}}</div></div>

                        <div class="summary-info-container"><div class="summary-info" id="discount">₱ {{invoiceInfo.discount}}</div></div>
                    </div>
                    <div class="summary-container">
                        <div class="summary-text">Order Total</div>
                        <div class="summary-info-container"><div class="summary-info" id="orderTotal">₱ {{invoiceInfo.total}}</div></div>
                    </div>

                    <hr style="margin-top: 0px; margin-bottom: 10px;">

                    <div class="summary-container">
                        <div class="summary-text">Paid by Customer</div>
                        <div class="summary-info-container"><div class="summary-info" id="paid">₱ {{invoiceInfo.total}}</div></div>
                    </div>

                    <div class="summary-container">
                        <div class="summary-text">Refunded Amount</div>
                        <div class="summary-info-container"><div class="summary-info" id="refund">₱ 0.00</div></div>
                    </div>


                    <hr style="margin-top: 0px; margin-bottom: 10px;">

                    <div class="summary-container">
                        <div class="summary-text">Total</div>
                        <div class="summary-info-container"><div class="summary-info" id="total">₱ 0.00</div></div>
                    </div>
                    <div style="height: 10px"></div>


                    <div>
                        <div style="display: flex;">
                            <div style="width: 50%"><div class="btn-cancel-invoice"><button class="btn-light-grey" id="btn-save-invoice" style="margin-bottom: 10px;">Cancel</button></div></div>
                            <div class="btn-save-return btn-status"><button class="btn-light-blue" id="btn-save-return" style="margin-bottom: 10px; background-color:#b3b3b3" disabled >Save</button></div>
                        </div>
                    </div>

                    <!--<div class="btn-export-invoice"><button class="btn-dark-blue" id="btn-export-invoice">Export</button></div>-->

                    <div style="height: 20px"></div>
        </div>

        <script>
            $(document).ready(function(){

                $('#dropdown-return-type').val($('#invoice-type').text())
                $('#dropdown-payment-type').val($('#payment-type').text())

                if($('#dropdown-return-type option:selected').text()) {
                    $('.delivery-info').css('display', 'block');

                }

                function numberWithCommas(x) {
                    return x?.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }

                function getCheckCustomerNameInvoice () {
                    // Get value 
                    var customerName = $("#customerName").val();

                    if (customerName != "") {
                        $.get("/getCheckCustomerNameInvoice", {customerName: customerName}, function (result) {
                            if (result.name != customerName) {
                                $('#add-new-customer').css('display', 'block')
                                $('#error-customer-name').text("Create new customer record.");
                                $('#customer-Name').css("border", "2px solid #B00000");
                            } else {
                                $('#add-new-customer').css('display', 'none')
                                $('#error-customer').text("");
                                $('#customer-Name').css("border", "1px solid #DDDDDD");
                            }
                        });
                    } else {
                        $('#add-new-customer').css('display', 'none')
                        $('#error-customer-name').text("");
                        $('#customer-Name').css("border", "1px solid #DDDDDD");
                    }
                }


                $('#dropdown-return-type').change(function() {
                    var val = $('#dropdown-return-type option:selected').text();

                    $('#add-new-customer').css('display', 'none');
                    $('#error-customer-name').text("");
                    $('#customerName').css("border", "1px solid #DDDDDD");

                    if (val == "In-Store") {
                        $('.delivery-info').css('display', 'none')

                        var payment = $('#dropdown-payment-type option:selected').text();

                        if (payment == "COD") {
                            $('#btn-save-return').prop('disabled', true)
                            $('#btn-save-return').css("background-color", "#b3b3b3");
                            $('#dropdown-payment-type').css("border", "2px solid #B00000");
                            $('#payment-type-error').text('Payment method cannot be COD for in-store transactions');

                        }
                        else {
                            $('#btn-save-return').prop('disabled', false)
                            $('#btn-save-return').css("background-color", "#0F84D9") 
                            $('#dropdown-payment-type').css("border", "1px solid #DDDDDD")
                            $('#payment-type-error').text('');
                        }

                        if (payment == "On Account") 
                            getCheckCustomerNameInvoice();
                    }
                    else {
                        getCheckCustomerNameInvoice();
                        $('.delivery-info').css('display', 'block');
                        $('#dropdown-payment-type').css("border", "1px solid #DDDDDD")
                        $('#payment-type-error').text('');
                    }
                });

                $('#dropdown-payment-type').change(function() {
                    var type = $('#dropdown-return-type option:selected').text();
                    var payment = $('#dropdown-payment-type option:selected').text();

                    $('#add-new-customer').css('display', 'none')
                    $('#error-customer-name').text("");

                    if (type == "In-Store" && payment == "COD") {
                        $('#btn-save-return').prop('disabled', true)
                        $('#btn-save-return').css("background-color", "#b3b3b3");
                        $('#dropdown-payment-type').css("border", "2px solid #B00000")
                        $('#payment-type-error').text('Payment method cannot be COD for in-store transactions')
                    } 
                    else {
                        $('#btn-save-return').prop('disabled', false)
                        $('#btn-save-return').css("background-color", "#0F84D9");
                        $('#dropdown-payment-type').css("border", "1px solid #DDDDDD");
                        $('#payment-type-error').text('');
                    }

                    if (type == "In-Store" && payment == "On Account"){
                        getCheckCustomerNameInvoice();
                    }

                     if (type == "Delivery"){
                        getCheckCustomerNameInvoice();
                    }
                });

                //should be for delivery only
                $("#customerName").autocomplete({
                    source: function(request, response) {
                    $.ajax({
                                url: `/getCustomerName?query=${request.term}`,
                                dataType: "json",
                                data: {
                                    //request.term refers to the value currently in the text input
                                    term: request.term
                                },
                                success: function (data) {
                                    response(data);
                                }
                         });
                    }, response: function (event, ui) {
                        if (ui.content.length === 0) {
                            $("#customerName").css("border", "1px solid #B00000");
                            $("#error-customer-name").text("Customer does not exist")
                            $("#btn-save-return").prop("disabled", true);
                            $("#btn-save-return").css("background-color", "#b3b3b3");
                        }
                        else {
                            $("#customerName").css("border", "1px solid #DDDDDD");
                            $('#error-customer-name').text('')
                            $("#btn-save-return").prop("disabled", false);
                            $("#btn-save-return").css("background-color", "#0F84D9");
                        }
                    }, select: function(event, ui) {
                        var customerName = ui.item.label;
                        $.get('/getCustomerInformation', {customerName}, function(result) {
                            $('#contactNumber').val(result.number);
                            $("#customerName").css("border", "1px solid #DDDDDD");
                            $('#error-customer-name').text("")
                            $("#error-customer-name").css("display", "none");
                            $("#btn-save-return").prop("disabled", false);
                            $("#btn-save-return").css("background-color", "#0F84D9");
                        })
                    }
                });

                $('#dropdown-address-title').change(function() {
                    var customerName = $('#customerName').val()
                    var addressTitle = $('#dropdown-address-title option:selected').text()

                    $.get('/getCustomerAddress', {customerName, addressTitle}, function(result) {
                        $('#address').val(result)
                    })
                })

                $("#return-add-item-description").autocomplete({
                    source: function(request, response) {
                    $.ajax({
                                url: `/getItemName?query=${request.term}`,
                                dataType: "json",
                                data: {
                                    //request.term refers to the value currently in the text input
                                    term: request.term
                                },
                                success: function (data) {
                                    $('#text-warning').text("")
                                    $("#return-add-item-description").css("border", "1px solid #DDDDDD");
                                    response(data);
                                }
                         });
                    }, response: function (event, ui) {
                        var itemDesc = $('#return-add-item-description').val()
                        if (ui.content.length === 0)  {
                            //checks if item exists but is out of stock or if item doesn't exist at all
                            $.get('/getCheckItemExists', {itemDesc}, function(result) {
                                if (result.length == 0) 
                                    $('#text-warning').text("Item does not exists")
                                else
                                    $('#text-warning').text("Item is out of stock")
                            })
                        }
                    }, select: function(event, ui) {
                        var itemDesc = ui.item.label;
                        $.get('/getItemUnitsInvoice', {itemDesc}, function(result) {
                            $('#dropdown-item-unit option:not(:first)').remove();
                            for (var i=0; i<result.length; i++) {
                                $('#dropdown-item-unit').append(`
                                    <option value="${result[i].id}">${result[i].unit}</option>
                                `)
                            }
                            $('#dropdown-item-unit').prop("selectedIndex", 1)
                        }); 
                    }
                });

                $('#total-discount').keyup(function() {
                    computeTotal()
                });

                $('.return-check').change(function() {
                    $('#btn-save-return').prop('disabled', false)
                    $('#btn-save-return').css("background-color", "#0F84D9")

                    if ($(this).is(":checked")) {
                        $(this).parents('tr').find(".return-quantity").prop('disabled', false)
                        $(this).parents('tr').find(".return-reason").prop('disabled', false)
                    }
                    else {
                        $(this).parents('tr').find(".return-quantity").prop('disabled', true)
                        $(this).parents('tr').find(".return-reason").prop('disabled', true)
                    }
                    computeTotal();
                });

                $('.return-quantity').keyup(function () {
                    if (parseInt($(this).parents('tr').find('.return-quantity').val()) > parseInt($(this).parents('tr').find('.quantity-purchased').text())){
                        $(this).parents('tr').find(".return-quantity").css("border", "2px solid #B00000");
                        alert("Quantity returned cannot be greater than quantity purchased");
                        $("#btn-save-return").prop("disabled", true);
                        $("#btn-save-return").css("background-color", "#b3b3b3");
                    }
                    else {
                        $(this).parents('tr').find(".return-quantity").css("border", "1px solid #DDDDDD");
                        $("#btn-save-return").prop("disabled", false);
                        $("#btn-save-return").css("background-color", "#0F84D9");
                        computeTotal()
                    }
                });

                $("#table-return-new-item-body").on('click','.delete-item-btn',function() {
                    $(this).closest('tr').remove();
                    computeTotal();
                });

                function customerNameFilled() {
                    var customerName = $('#customerName').val();
                    if (customerName == '') {
                            $("#customerName").css("border", "1px solid #B00000");
                            $("#error-customer-name").text("Customer name cannot be empty");
                            $("#btn-save-return").prop("disabled", true);
                            $("#btn-save-return").css("background-color", "#b3b3b3");
                            $('#contactNumber').val('');
                            $('#address').val('');
                            return false;
                        }
                        else {
                            $("#customerName").css("border", "1px solid #DDDDDD");
                            $('#error-customer-name').text('')
                            $("#btn-save-return").prop("disabled", false);
                            $("#btn-save-return").css("background-color", "#0F84D9");
                            return true;
                        }
                }

                function deliveryInfoFilled() {
                    var deliveryDate = $('#delivery-date').val();
                    var deliveryPersonnel = $('#dropdown-delivery-personnel').val();

                    var address = $('#dropdown-address-title option:selected').text();
                    var contactNumber = $('#contactNumber').val();

                    //inputs are complete
                    if (deliveryDate && deliveryPersonnel!="no-selected" && address!="" && contactNumber!="") {
                        $('#delivery-date').css("border", "1px solid #DDDDDD");
                        $('#dropdown-payment-type').css("border", "1px solid #DDDDDD");
                        $('#dropdown-delivery-personnel').css("border", "1px solid #DDDDDD");
                        $('#dropdown-address-title').css("border", "1px solid #DDDDDD");
                        $('#contactNumber').css("border", "1px solid #DDDDDD");
                        return true;
                    }
                    else {
                        if (!deliveryDate) //delivery date is blank
                            $('#delivery-date').css("border", "2px solid #B00000");
                        else
                            $('#delivery-date').css("border", "1px solid #DDDDDD");

                        if (deliveryPersonnel == "no-selected")
                            $('#dropdown-delivery-personnel').css("border", "2px solid #B00000")
                        else
                            $('#dropdown-delivery-personnel').css("border", "1px solid #DDDDDD");

                        if (address == "Select Address")
                            $('#dropdown-address-title').css("border", "2px solid #B00000");
                        else
                            $('#dropdown-address-title').css("border", "1px solid #DDDDDD");

                        if (contactNumber == "")
                            $('#contactNumber').css("border", "2px solid #B00000");
                        else
                            $('#contactNumber').css("border", "1px solid #DDDDDD");

                        return false;
                    }
                }


                function allFilled() {
                    var boolAllFilled = true

                    var invoiceType = $('#dropdown-return-type option:selected').text()
                    var noReason = false

                    $('#table-return-order-details > tbody > tr').each(function() {
                        if ($(this).find('.return-check').is(":checked")) {
                            //no selected return reason
                            if ($(this).find('.return-reason').val() == "no-selected") {
                                noReason = true;
                                $(this).find('.return-reason').css("border", "2px solid #B00000")
                            }
                            else {
                                $(this).find('.return-reason').css("border", "1px solid #DDDDDD")
                            }
                        }
                    })
                    if (noReason) {
                        alert("Select return reason for items");
                        boolAllFilled = false
                    }

                    if (invoiceType == "In-Store") {
                        if (!customerNameFilled()) 
                            boolAllFilled = false
                    }

                    else if (invoiceType == "Delivery") {
                        if (!customerNameFilled() || !deliveryInfoFilled())
                            boolAllFilled = false
                    }
                    console.log(boolAllFilled)
                    return boolAllFilled
                }

                function computeTotal() {
                    var orderTotal = 0;
                    var discount = 0;
                    var refund = 0;
                    var newItemsTotal = 0;

                    var paid = parseFloat($('#paid').text().slice(1).split(',').join(''));

                    $('#table-return-order-details > tbody > tr').each(function() {
                        //item to be returned, either added to shrinkage or added back to inventory
                        var quantity = $(this).find('.return-quantity').val();
                        if (quantity == "" || quantity == NaN)
                            quantity = 0;

                        var unitPrice = parseFloat($(this).children('.return-unit-price').text().slice(1).split(",").join(""))
                        var discount = parseFloat($(this).children('.return-discount').text().slice(1).split(",").join(""))

                        var quantityPurchased = parseFloat($(this).find('.quantity-purchased').text())

                        //all items were returned
                        if ($(this).find('.return-check').is(":checked") && (quantity == quantityPurchased)) 
                            refund = parseFloat(parseFloat(refund) + parseFloat(quantity * (unitPrice- discount))).toFixed(2);

                        else if ($(this).find('.return-check').is(":checked") && (quantity != quantityPurchased)) {
                            refund = parseFloat(parseFloat(refund) + parseFloat(quantity * (unitPrice - discount))).toFixed(2)
                            orderTotal += ((quantityPurchased- quantity) * (unitPrice - discount));
                        }
                        else 
                            orderTotal += (quantity * (unitPrice - discount));
                    })

                    $('#table-return-new-item-body > tr').each(function() {
                        var amount = parseFloat($(this).find('.amount').text().slice(1).split(",").join(""));
                        orderTotal += parseFloat(amount);
                        //newItemsTotal += parseFloat(amount)
                    })

                    var previousDiscount = parseFloat($('#prev-invoice-discount').text())

                    var discountTotal = $('#total-discount').val();
                    if (discountTotal == "")
                        discountTotal = 0

                    discountTotal = parseFloat(discountTotal) + previousDiscount

                    orderTotal =parseFloat(parseFloat(orderTotal) -  parseFloat(discountTotal)).toFixed(2)
                    var subtotal = parseFloat(orderTotal)/1.12;
                    var vat = parseFloat(orderTotal) - parseFloat(subtotal);

                    var total = parseFloat(parseFloat(orderTotal) - parseFloat(paid)).toFixed(2);   
                    //total = parseFloat(parseFloat(total) - parseFloat(discountTotal)).toFixed(2)

                    
                    $('#subtotal').text("₱ " + numberWithCommas(parseFloat(subtotal).toFixed(2)));
                    $('#vat').text("₱ " + numberWithCommas(parseFloat(vat).toFixed(2)));
                    $('#orderTotal').text("₱ " + numberWithCommas(parseFloat(orderTotal).toFixed(2)));

                    $('#refund').text("₱ " + numberWithCommas(parseFloat(refund).toFixed(2)));

                    $('#total').text("₱ " + numberWithCommas(parseFloat(total).toFixed(2)));
                    $('#discount').text("₱ " + numberWithCommas(parseFloat(discountTotal).toFixed(2)));
                }

                function filled(itemDesc, unit, qty) {
                    var filled =true

                    if (itemDesc == "") {
                        $('#return-add-item-description').css("border", "1px solid #B00000")
                        $('#text-warning').text("Input item description")
                        return false;
                    } else 
                        $('#return-add-item-description').css("border", "1px solid #DDDDDD")

                    if (unit == "no-selected") {
                        $('#dropdown-item-unit').css("border", "1px solid #B00000")
                        $('#text-warning').text("Select unit")
                        return false;
                    }
                    else
                        $('#dropdown-item-unit').css("border", "1px solid #DDDDDD")

                    if (qty == "") {
                        $('#return-add-item-qty').css("border", "1px solid #B00000")
                        $('#text-warning').text("Input quantity")
                        return false
                    }
                    else
                        $('#return-add-item-qty').css("border", "1px solid #DDDDDD")

                    if (filled)
                        $('#text-warning').text("")
                    return filled
                }


                $('#return-add-item').click(function() {
                    var itemDesc = $('#return-add-item-description').val();
                    var quantity = $('#return-add-item-qty').val();
                    var discount = $('#return-add-item-discount').val();
                    if (discount == "")
                        discount = 0;
                    var unit = $("#dropdown-item-unit option:selected").text();
                    var unitID = $('#dropdown-item-unit').val();

                    if (filled(itemDesc, unitID, quantity)) {
                        $.get('/getItemPrice', {itemDesc, quantity, unitID}, function (result) {
                            if(quantity > result.quantityAvailable) {
                                $('#text-warning').text("Requested amount exceeds available!");
                            }
                            else {
                                var sellingPrice = result.sellingPrice;
                                var totalPrice = parseFloat((sellingPrice*quantity)- (discount*quantity)).toFixed(2);

                                var element = $('#table-return-new-item tr').filter(function(){
                                        return (this.innerHTML.indexOf(itemDesc) != -1 && this.innerHTML.indexOf(unit) != -1);
                                })
                                if (element.length){
                                    //alert("element at index already inside!")
                                    //console.log(element)
                                     $('#text-warning').text("Item already exists in cart!");
                                }
                                else {
                                    $('#table-return-new-item-body').append(
                                        `<tr>
                                            <td class="itemDesc">${itemDesc}</td>
                                            <td class="quantity" style="text-align: right;">${quantity}</td>
                                            <td class="unit">${unit}</td>
                                            <td class="unitPrice" style="text-align: right;">₱ ${numberWithCommas(sellingPrice)}</td>
                                            <td class="discount" style="text-align: right;">₱ ${numberWithCommas(discount)}</td>
                                            <td class = "amount" style="text-align: right;">₱ ${numberWithCommas(totalPrice)}</td>
                                            <td style="text-align: right;" <button class="delete-button delete-item-btn"><img src="../images/delete-icon.png" height="20px" width="15x" alt="Delete"></button> </td>
                                        </tr>`)

                                    computeTotal();
                                    $('#text-warning').text("");
                                    $('#return-add-item-description').val('');
                                    $('#return-add-item-qty').val('');
                                    $('#return-add-item-discount').val('');
                                    $('#dropdown-item-unit option:not(:first)').remove();
                                }
                            }   
                        })
                    }
                })

                $('#btn-save-return').click(function () {
                    var returns = [];
                    var newInvoiceItems = [];

                    var address = window.location.pathname.split('/');
                    var oldInvoiceID = address[address.length -1];

                    if (allFilled()) {

                        $('#table-return-order-details > tbody > tr').each(function() {
                            //item to be returned, either added to shrinkage or added back to inventory

                            //all quantity to be returned
                            if ($(this).find('.return-check').is(":checked") && (parseInt($(this).find('.quantity-purchased').text()) == parseInt($(this).find('.return-quantity').val()))) {
                                var returnItem = {
                                    itemDesc: $(this).children('.return-item-desc').text(),
                                    unit:$(this).children('.unit').text(),
                                    quantity: $(this).find('.return-quantity').val(),
                                    reason: $(this).find('.return-reason').val(),
                                    //discount: $(this).children('.return-discount').text().slice(1)
                                }
                                returns.push(returnItem)
                            } 

                            //some quantity to be returned
                            else if ($(this).find('.return-check').is(":checked") && (parseInt($(this).find('.quantity-purchased').text()) != parseInt($(this).find('.return-quantity').val()))) {
                                var discount = $(this).children('.return-discount').text().slice(1)

                                  var returnItem = {
                                    itemDesc: $(this).children('.return-item-desc').text(),
                                    unit:$(this).children('.unit').text(),
                                    quantity: $(this).find('.return-quantity').val(),
                                    reason: $(this).find('.return-reason').val(),
                                    discount: parseFloat($(this).find('.return-quantity').val()) * discount
                                    //discount: $(this).children('.return-discount').text().slice(1)
                                }
                                returns.push(returnItem)

                                var invoiceItem = {
                                    itemDesc: $(this).children('.return-item-desc').text(),
                                    unit:$(this).children('.unit').text(),
                                    quantity: parseFloat($(this).children('.quantity-purchased').text()) - $(this).find('.return-quantity').val(),
                                    discount: discount * (parseFloat($(this).children('.quantity-purchased').text()) - $(this).find('.return-quantity').val()),
                                    fromReturn: true
                                }
                                newInvoiceItems.push(invoiceItem);
                            }

                            //item will not be returned, add to new invoice
                            else {
                                var invoiceItem = {
                                    itemDesc: $(this).children('.return-item-desc').text(),
                                    unit:$(this).children('.unit').text(),
                                    quantity: $(this).find('.return-quantity').val(),
                                    //discount: 0
                                    discount: $(this).children('.return-discount').text().slice(1),
                                    fromReturn: true
                                }
                                newInvoiceItems.push(invoiceItem);
                            }
                        })

                        $('#table-return-new-item-body > tr').each(function() {
                            var invoiceItem = {
                                itemDesc: $(this).children('.itemDesc').text(),
                                unit:$(this).children('.unit').text(),
                                quantity: $(this).children('.quantity').text(),
                                discount: $(this).children('.discount').text().slice(1)
                            }
                            newInvoiceItems.push(invoiceItem);
                        })

                        var invoiceType = $('#dropdown-return-type').val();

                        var paymentOptionText = $('#dropdown-payment-type option:selected').text()
                        if (paymentOptionText == "On Account" || paymentOptionText == "COD")
                            statusID = "619785d78094faf8c10d1484"
                        else 
                            statusID = "619785b0d9a967328c1e8fa6"

                        var deliveryInfo;
                        //order is a delivery
                        if (invoiceType == "61a591c1233fa7f9abcd5726") {
                            var invoiceInfo = {
                                customerName: $('#customerName').val(),
                                invoiceType: invoiceType,
                                statusID: statusID,
                                paymentOptionID:$('#dropdown-payment-type').val(),
                                subtotal: parseFloat($('#subtotal').text().slice(1).split(",").join("")),
                                vat: parseFloat($('#vat').text().slice(1).split(",").join("")),
                                discount: parseFloat($('#discount').text().slice(1).split(",").join("")),
                                total: parseFloat($('#total').text().slice(1).split(",").join(""))
                            }

                            deliveryInfo = {
                                customerAddressTitle: $('#dropdown-address-title option:selected').text(),
                                deliveryDate: new Date($('#delivery-date').val()),
                                deliveryPersonnel: $('#dropdown-delivery-personnel').val(),
                                deliveryNotes: $('#delivery-notes').val()
                            }
                        }
                        else {
                            var invoiceInfo = {
                                customerName: $('#customerName').val(),
                                invoiceType: invoiceType,
                                statusID: statusID,
                                paymentOptionID: $('#dropdown-payment-type').val(),
                                subtotal: parseFloat($('#subtotal').text().slice(1).split(",").join("")),
                                vat: parseFloat($('#vat').text().slice(1).split(",").join("")),
                                discount: parseFloat($('#discount').text().slice(1).split(",").join("")),
                                total: parseFloat($('#total').text().slice(1).split(",").join(""))
                            }
                            deliveryInfo= {};
                        }

                        var invoiceInfoString = JSON.stringify(invoiceInfo);
                        var returnsString = JSON.stringify(returns);
                        var newInvoiceItemsString = JSON.stringify(newInvoiceItems);
                        var deliveryInfoString = JSON.stringify(deliveryInfo);
                        $.post('/saveReturn', {oldInvoiceID, invoiceInfoString, returnsString, newInvoiceItemsString, deliveryInfoString}, function(result) {
                                alert("Return processed")
                                window.location = `/invoices/${result}`;
                        }) 

                    }
                    else
                        alert("Please fill out the necessary information")    
                });

                //---------------------VALIDATION FOR NEW CUSTOMER--------------------------

                 function errorMessage(type) {
                    if (type == "noName") {
                        $('#new-customer-name').css("border", "1px solid #B00000");
                        $('#error-new-customer-name').text("Input customer name.");
                    } 
                    else if (type == "noContact") {
                        $('#contact-person').css("border", "1px solid #B00000");
                        $('#error-contact-person').text("Please input contact person");
                    } 
                    else if (type == "noNumber") {
                        $('#new-contact-number').css("border", "1px solid #B00000");
                        $('#error-contact-number').text("Invalid contact number.");
                    }
                }

                function customerNameValidation(name) {
                    if (name == null || name == "") {
                        errorMessage("noName")
                        return 1;
                    } 
                    else {
                        $('#new-customer-name').css("border", "1px solid #DDDDDD");
                        $('#error-new-customer-name').text("");
                        return 0;
                    }
                }

                function contactPersonValidation(name) {
                    if (name == null || name == "") {
                        errorMessage("noContact")
                        return 1;
                    }
                    else {
                        $('#contact-person').css("border", "1px solid #DDDDDD");
                        $('#error-contact-person').text("")
                        return 0;
                    }
                }   

                function numberValidation(number) {
                    if (number == 0 || number < 0) {
                        errorMessage("noNumber")
                        return 1;
                    }
                    else {
                        $('#new-contact-number').css("border", "1px solid #DDDDDD");
                        $('#error-contact-number').text("");
                        return 0;
                    }
                }     

                function addressValidation() {
                    var notFilled = false

                    $('.address-title').each(function () {
                        if ($(this).val() == "") {
                            $(this).css("border", "1px solid #B00000");
                            $(this).parents('.flex-display').next('p').text("Input address title");
                            notFilled = true
                        }
                        else {
                            $(this).parents('.flex-display').next('p').text("");
                            $(this).css("border", "1px solid #DDDDDD")
                        }
                    })

                    $('.address').each(function() {
                        if ($(this).val() == "") {
                            $(this).css("border", "1px solid #B00000");
                            $(this).parents('.flex-display').next('p').text("Input address");
                            notFilled = true
                        }
                        else {
                            $(this).parents('.flex-display').next('p').text("");
                            $(this).css("border", "1px solid #DDDDDD")
                        }
                    })

                    return notFilled;
                }

                $(document).on('click', '.delete-address-button', function() {
                    $(this).closest('.new-address-row').remove()
                })
                

                $('#more-address').click(function() {
                    $('#new-row').append(`
                        <div class="new-address-row">
                            <div class="flex-display" style="margin-bottom:3px; align-items:center">
                                <label for="address-title" class="modal-label">Address Title</label> 
                                <input class="address-title modal-input form-control" type="text" style="margin-right:5px; width: 92%"><br>
                                <button class="delete-address-button" style="height: 30px"><img src="../images/delete-icon.png" height="20px" width="15x" alt="Delete"></button>
                            </div>
                             <p class="error modal-error error-address-title"></p>

                            <div class="flex-display" style="margin-bottom:3px;">
                                <label for="address" class="modal-label">Address</label> 
                                <input class="address modal-input form-control" type="text"><br>
                            </div>
                            <p class="error modal-error error-address"></p>
                        </div>
                    `)
                })

                 $('#save-cust').click(function() {
                    var name = capitalize($('#new-customer-name').val());
                    var contactPerson = capitalize($('#contact-person').val())
                    var number = $('#new-contact-number').val();
                    var address = []
                    var addressTitle = []

                    $('.address').each(function() {
                        address.push($(this).val())
                    })

                    $('.address-title').each(function () {
                        addressTitle.push(capitalize($(this).val()))
                    })

                    var titleStr = JSON.stringify(addressTitle)
                    var addressStr = JSON.stringify(address)
                    if (!customerNameValidation(name) && !contactPersonValidation(contactPerson) && !numberValidation(number) && !addressValidation(addressTitle, address)) {

                        $('#new-customer-name').css("border", "1px solid #DDDDDD");
                        $('#contact-person').css("border", "1px solid #DDDDDD")
                        $('#new-contact-number').css("border", "1px solid #DDDDDD");
                        $('#address').css("border", "1px solid #DDDDDD");

                        $('#error-new-customer-name').text("");
                        $('#error-contact-number').text("");
                        $('#error-address').text("");
                        $('#error-contact-person').text("")

                         $.post('/postCustomerInformation', {name, contactPerson, number, addressStr, titleStr}, function(result) {
                            $('#modal-add-customer').modal('hide');
                            $('#add-new-customer').trigger('reset');
                         }) 
                   }
                })

                function capitalize(string){
                    var words = string.toLowerCase().split(' ');
                    for (i=0; i<words.length; i++)
                        words[i] = words[i].charAt(0).toUpperCase() + words[i].substring(1);
                    return words.join(' ');
                };
            })
        </script>
    </body>
</html>